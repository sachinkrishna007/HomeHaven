
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>

<br>
<br>
<br>
<div class="main_container m-5">
    <div class="text-center">
        <!-- <button type="button" class="btn btn-secondary btn_print m-3" value="Download as Pdf"><i class="fas fa-file-pdf"></i> Download as PDF</button>
        <button type="button" class="btn btn-secondary btn_print m-3" value="Print"><i class="fas fa-print"></i> Print</button>
         -->


         <button type="button" class="btn btn-secondary btn_print m-3" onclick="exportToPDF()" value="Export to PDF">
            <i class="fas fa-file-pdf"></i> Download as PDF
        </button>
        
      <button type="button" class="btn btn-secondary btn_print m-3" onclick="export_data()" value="Export to excel"><i class="fas fa-file-excel"></i> Download as Excel</button>
  
    </div>
  
    <div style="margin-top: -5em;">
      <form action="/admin/salesReport" method="POST" id="salesReport">
  
        <div><input type="date" name="startdate" id="startdate" placeholder="Start Date" class="btn btn-primary"></div>
        
        <span id="date-error1" style="display: none; color: red;">Invalid Start Date</span>
  
        <div><input type="date" name="enddate" id="enddate" placeholder="End Date" class="btn btn-primary"></div>
        <span id="date-error2" style="display: none; color: red;">Invalid End Date</span>
        <br>
  
        <button class="btn btn-info" type="submit" id="submit-button">Submit</button>
  
      </form>
    </div>
  
    <br>
    <br>
    <table class="table table-striped table-hover" id="container_content">
    <thead>
        <tr>
          <th scope="col">Order ID</th>
          <th scope="col">User Name</th>
          <th scope="col">Item Name</th>
          <th scope="col">Price</th>
          <th scope="col">Payment Mode</th>
          <th scope="col">Date</th>
        </tr>
      </thead>
      <tbody>
        <% details.forEach((orderDetail) => { %>
          <tr>
            <td><%= orderDetail.order._id %></td>

            <td><%= orderDetail.order.user %></td>
            <td><%= orderDetail.productName %></td>
            
            
            
            <td>â‚¹<%= orderDetail.order.total %></td>
            <td><%= orderDetail.order.paymentMethod %></td>
            <td><%= orderDetail.orderDate %></td>
          </tr>
        <% }) %>
      </tbody>
    </table>
 
   
    <% details.forEach((orderDetail) => { %>
        <!-- ... -->
        <% console.log('d'+orderDetail); %>
      <% }) %>
      
  </div>
  <br>
  <br>
  
  
  </div>
  <script>  
    let startDate = document.getElementById('startdate')
    let endDate = document.getElementById('enddate')
    let error1 = document.getElementById('date-error1')
    let error2 = document.getElementById('date-error2')
 
    let submitButton = document.getElementById('submit-button');
 
 // Disable submit button on page load
 submitButton.disabled = true;
 
 // Add event listeners to start date and end date inputs
 startDate.addEventListener("input", validateDates);
 endDate.addEventListener("input", validateDates);
 
 function validateDates() {
   const selectedStartDate = new Date(startDate.value);
   const selectedEndDate = new Date(endDate.value);
   const today = new Date();
 
   if (selectedStartDate < today) {
     error1.style.display = "none";
   } else {
     error1.style.display = "inline";
   }
 
   if (selectedEndDate < today) {
     error2.style.display = "none";
   } else {
     error2.style.display = "inline";
   }
 
   // Check if either error is displayed or if end date is before start date
   if (error1.style.display === "inline" || error2.style.display === "inline" || selectedEndDate < selectedStartDate) {
     submitButton.disabled = true;
   } else {
     submitButton.disabled = false;
   }
 }

 function exportToPDF() {
    const element = document.getElementById('container_content');
    const opt = {
        margin: 10,
        filename: 'sales_report.pdf',
        image: { type: 'jpeg', quality: 0.98 },
        html2canvas: { scale: 2 },
        jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },
    };

    html2pdf().from(element).set(opt).save();
}



     function export_data() {
         let data = document.getElementById('container_content');
         var fp = XLSX.utils.table_to_book(data, { sheet: 'SalesReport' });
         XLSX.write(fp, {
             bookType: 'xlsx',
             type: 'base64'
         });
         XLSX.writeFile(fp, 'test.xlsx');
     }
 




 </script>
  

  </script>
<style></style>